LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY tb_robot IS
END tb_robot;
 
ARCHITECTURE behavior OF tb_robot IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT Robot
    PORT(
         Clk : IN  std_logic;
         SEL : IN  std_logic_vector(1 downto 0);
         S_LINEA : IN  std_logic_vector(1 downto 0);
         S_LUZ : IN  std_logic_vector(1 downto 0);
         S_OBST : IN  std_logic_vector(1 downto 0);
         CONTROL : OUT  std_logic_vector(3 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal Clk : std_logic := '0';
   signal SEL : std_logic_vector(1 downto 0) := (others => '0');
   signal S_LINEA : std_logic_vector(1 downto 0) := (others => '0');
   signal S_LUZ : std_logic_vector(1 downto 0) := (others => '0');
   signal S_OBST : std_logic_vector(1 downto 0) := (others => '0');

 	--Outputs
   signal CONTROL : std_logic_vector(3 downto 0);

   -- Clock period definitions
   constant Clk_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: Robot PORT MAP (
          Clk => Clk,
          SEL => SEL,
          S_LINEA => S_LINEA,
          S_LUZ => S_LUZ,
          S_OBST => S_OBST,
          CONTROL => CONTROL
        );

   -- Clock process definitions
   Clk_process :process
   begin
		Clk <= '0';
		wait for Clk_period/2;
		Clk <= '1';
		wait for Clk_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	
      sel <= "00"; --s_linea
			wait for 50 ns;
			S_LINEA <= "00";
			wait for 50 ns;
			S_LINEA <= "01";
			wait for 50 ns;
			S_LINEA <= "10";
			wait for 50 ns;
			S_LINEA <= "11";
		
		wait for 100 ns;	
      sel <= "01"; --s_luz
			wait for 50 ns;
			S_LUZ <= "00";
			wait for 50 ns;
			S_LUZ <= "01";
			wait for 50 ns;
			S_LUZ <= "10";
			wait for 50 ns;
			S_LUZ <= "11";
			wait for 50 ns;
			S_LINEA <= "10";
			
		wait for 100 ns;	
      sel <= "10"; --s_obstaculos
			wait for 50 ns;
			S_OBST <= "00";
			wait for 50 ns;
			S_OBST <= "01";
			wait for 50 ns;
			S_OBST <= "10";
			wait for 50 ns;
			S_OBST <= "11";
		
		wait for 100 ns;	
      sel <= "11";

		wait for 100 ns;	
      sel <= "01"; --s_luz
			wait for 50 ns;
			S_LUZ <= "00";
			wait for 50 ns;
			S_LUZ <= "01";
			wait for 50 ns;
			S_LUZ <= "10";
			wait for 50 ns;
			S_LUZ <= "11";
			wait for 50 ns;
			S_LINEA <= "10";

      -- insert stimulus here 

      wait;
   end process;

END;
